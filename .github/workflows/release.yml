name: Release

on:
  release:
    types: [ published ]
    branches:
      - '*'

env:
  WINDOWS_PACKAGE: m3u8downloader-${{ github.event.release.tag_name }}-windows.exe
  LINUX_RPM_PACKAGE: m3u8downloader-${{ github.event.release.tag_name }}-linux.rpm
  LINUX_DEB_PACKAGE: m3u8downloader-${{ github.event.release.tag_name }}-debian.deb
  MACOS_PACKAGE: m3u8downloader-${{ github.event.release.tag_name }}-macos.pkg
  UPLOAD_URL: ${{ github.event.release.upload_url }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release_windows:
    name: Release Windows
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        os: [ windows-latest ]
        python-version: [ '3.10' ]
    runs-on: ${{ matrix.os }}
    permissions: write-all
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Build Package
        run: |
          python setup.py bdist

      - name: Get Package Name (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $path_separator = "\\"
          $latestFile = Get-ChildItem -Path "dist\\" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          Write-Host "Latest file: $latestFile"
          Write-Output "PACKAGE_NAME=dist$path_separator$($latestFile.Name)" | Out-File -FilePath $env:GITHUB_ENV -Append

  publish:
    name: Publish
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.10' ]
    runs-on: ${{ matrix.os }}
    permissions: write-all
    needs: [ release_windows ]
    steps:
      - name: Publish Release
        run: |
          curl -X PATCH \
            -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"draft": false}' \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}"